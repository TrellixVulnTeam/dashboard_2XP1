{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Alexander/Sync/Documents/Private/programming/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'dashboard';\n    this.backgrounds = ['https://images.unsplash.com/photo-1626082610107-db2d7dac5481?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=2160&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTYzMzg2NTgyMw&ixlib=rb-1.2.1&q=80&w=3840'];\n    this.loadingBGImage = false;\n  }\n\n  prepareRoute(outlet) {\n    if (outlet.isActivated) return outlet.activatedRouteData['tab'];\n    return null; // TOOD FIX!!!!\n  }\n\n  changeBgImage() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.loadingBGImage = true;\n      const result = yield fetch('https://source.unsplash.com/random/3840×2160', {\n        method: 'HEAD'\n      });\n\n      const alreadyGot = _this.backgrounds.includes(result.url);\n\n      if (alreadyGot) {\n        // this is the same image as we currently have so we re-run the function\n        return _this.changeBgImage();\n      }\n\n      _this.backgrounds.push(result.url);\n    })();\n  }\n\n  onBGImageLoad(imgEvent) {\n    // bg img has loaded, now remove the old bg image from backgrounds array\n    const imgElement = imgEvent.target;\n    const src = imgElement.src;\n    this.backgrounds = this.backgrounds.filter(b => b === src);\n    this.loadingBGImage = false;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Alexander\\Sync\\Documents\\Private\\programming\\dashboard\\src\\app\\app.component.ts"],"names":[],"mappings":";AA2GA,OAAM,MAAO,YAAP,CAAmB;AAAzB,EAAA,WAAA,GAAA;AACE,SAAA,KAAA,GAAQ,WAAR;AAEA,SAAA,WAAA,GAAwB,CAAC,6LAAD,CAAxB;AAEA,SAAA,cAAA,GAA0B,KAA1B;AAiCD;;AA/BC,EAAA,YAAY,CAAC,MAAD,EAAqB;AAC/B,QAAI,MAAM,CAAC,WAAX,EACE,OAAO,MAAM,CAAC,kBAAP,CAA0B,KAA1B,CAAP;AACF,WAAO,IAAP,CAH+B,CAGlB;AACd;;AAGK,EAAA,aAAa,GAAA;AAAA;;AAAA;AACjB,MAAA,KAAI,CAAC,cAAL,GAAsB,IAAtB;AAEA,YAAM,MAAM,SAAS,KAAK,CAAC,8CAAD,EAAiD;AACzE,QAAA,MAAM,EAAE;AADiE,OAAjD,CAA1B;;AAIA,YAAM,UAAU,GAAG,KAAI,CAAC,WAAL,CAAiB,QAAjB,CAA0B,MAAM,CAAC,GAAjC,CAAnB;;AACA,UAAI,UAAJ,EAAgB;AACd;AACA,eAAO,KAAI,CAAC,aAAL,EAAP;AACD;;AAED,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,MAAM,CAAC,GAA7B;AAbiB;AAclB;;AAED,EAAA,aAAa,CAAC,QAAD,EAAgB;AAC3B;AACA,UAAM,UAAU,GAAG,QAAQ,CAAC,MAA5B;AACA,UAAM,GAAG,GAAG,UAAU,CAAC,GAAvB;AACA,SAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,CAAC,IAAI,CAAC,KAAK,GAAnC,CAAnB;AAEA,SAAK,cAAL,GAAsB,KAAtB;AACD;;AArCsB","sourcesContent":["import { animate, group, query, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n\n  // animations for changing routes\n  animations: [\n    trigger('routeAnim', [\n      transition(':increment', [\n        // host component style\n        style({\n          position: 'relative',\n          overflow: 'hidden'\n        }),\n\n        // entering and leaving elements\n        query(':enter, :leave', [\n          style({\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%'\n          })\n        ], { optional: true }),\n\n        group([\n\n          // leaving component moving in from the right\n          query(':leave', [\n            animate('200ms ease-in', style({\n              opacity: 0,\n              transform: 'translateX(-50px)'\n            }))\n          ], { optional: true }),\n\n          // entering component moving in from the right\n          query(':enter', [\n            style({\n              transform: 'translateX(50px)',\n              opacity: 0\n            }),\n            animate('200ms 120ms ease-out', style({\n              opacity: 1,\n              transform: 'translateX(0)'\n            }))\n          ], { optional: true })\n        ])\n      ]),\n\n      transition(':decrement', [\n        // host component style\n        style({\n          position: 'relative',\n          overflow: 'hidden'\n        }),\n\n        // entering and leaving elements\n        query(':enter, :leave', [\n          style({\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%'\n          })\n        ], { optional: true }),\n\n        group([\n\n          // leaving component moving in from the right\n          query(':leave', [\n            animate('200ms ease-in', style({\n              opacity: 0,\n              transform: 'translateX(50px)'\n            }))\n          ], { optional: true }),\n\n          // entering component moving in from the right\n          query(':enter', [\n            style({\n              transform: 'translateX(-50px)',\n              opacity: 0\n            }),\n            animate('200ms 120ms ease-out', style({\n              opacity: 1,\n              transform: 'translateX(0)'\n            }))\n          ], { optional: true })\n        ])\n      ])\n    ]),\n\n    trigger('bgAnim', {\n      transition(':leave', [\n        animate(1000, style({\n          opacity: 0\n        }))\n      ])\n    }) \n  ]\n})\n\nexport class AppComponent {\n  title = 'dashboard';\n\n  backgrounds: string[] = ['https://images.unsplash.com/photo-1626082610107-db2d7dac5481?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=2160&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTYzMzg2NTgyMw&ixlib=rb-1.2.1&q=80&w=3840'];\n\n  loadingBGImage: boolean = false;\n\n  prepareRoute(outlet: RouterOutlet) {\n    if (outlet.isActivated)\n      return outlet.activatedRouteData['tab'];\n    return null; // TOOD FIX!!!!\n  }\n\n\n  async changeBgImage() {\n    this.loadingBGImage = true;\n\n    const result = await fetch('https://source.unsplash.com/random/3840×2160', {\n      method: 'HEAD'\n    })\n\n    const alreadyGot = this.backgrounds.includes(result.url)\n    if (alreadyGot) {\n      // this is the same image as we currently have so we re-run the function\n      return this.changeBgImage();\n    }\n\n    this.backgrounds.push(result.url);\n  }\n\n  onBGImageLoad(imgEvent: Event) {\n    // bg img has loaded, now remove the old bg image from backgrounds array\n    const imgElement = imgEvent.target as HTMLImageElement;\n    const src = imgElement.src;\n    this.backgrounds = this.backgrounds.filter(b => b === src);\n\n    this.loadingBGImage = false;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}